#version: '3.8'
#
#services:
#  db:
#    image: postgres:15.1-alpine
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_DB: ${POSTGRES_DB}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#    healthcheck:
#      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
#      interval: 5s
#      timeout: 3s
#      retries: 10
#    ports:
#      - "5432:5432"
#    volumes:
#      - diplom_pg_data:/var/lib/postgresql/data/
#
#  run_migrations:
#    build: .
#    env_file: .env
#
#    environment:
#      POSTGRES_HOST: db
#    depends_on:
#      db:
#        condition: service_healthy
#    command: python manage.py migrate
#
#  api:
#    build: .
#    env_file: .env
#
#    environment:
#      POSTGRES_HOST: db
#    depends_on:
#      db:
#        condition: service_healthy
#      run_migrations:
#        condition: service_completed_successfully
#    ports:
#      - "8000:8000"
#    volumes:
#      - ./core:/opt/app/core/
#      - ./goals:/opt/app/goals/
#      - ./todolist:/opt/app/todolist/
#  collect_static:
#    build: .
#    env_file: .env
#    command: python manage.py collectstatic -c --no-input
#    volumes:
#      - django_static:/opt/app/static/
#
#  frontend:
#    image: sermalenk/skypro-front:lesson-34
#    ports:
#      - "80:80"
#    depends_on:
#      api:
#        condition: service_started
#      collect_static:
#        condition: service_completed_successfully
#    volumes:
#      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
#      - django_static:/usr/share/nginx/html/static/
#
#volumes:
#  diplom_pg_data:
#  django_static:



version: '3.8'

services:
  db:
    image: postgres:15.1-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - diplom_pg_data:/var/lib/postgresql/data/
  bot:
    build: .
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      run_migrations:
        condition: service_completed_successfully
    volumes:
      - ./bot:/app/bot/
    command: python manage.py runbot

  run_migrations:
    build: .
    env_file: .env

    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate

  api:
    build: .
    env_file: .env
    environment:
      POSTGRES_HOST: db
#      DEBUG: true
    depends_on:
      db:
        condition: service_healthy
      run_migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    volumes:
      - ./core:/opt/app/core/
      #добавила
      - ./goals:/opt/app/goals/
      #
      - ./todolist:/opt/app/todolist/
  collect_static:
    build: .
    env_file: .env
    command: python manage.py collectstatic -c --no-input
    volumes:
      - django_static:/opt/app/static/

  frontend:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
      collect_static:
        condition: service_completed_successfully
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static/

volumes:
  diplom_pg_data:
  django_static:
